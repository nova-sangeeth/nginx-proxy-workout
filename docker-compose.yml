version: '3'
services:
  # app:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - ./data:/data
  #     - ./letsencrypt:/etc/letsencrypt

  # nginx:
  #   build:
  #     context: ./nginx
  #     dockerfile: nginx.dockerfile
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  database:
    image: postgres:14
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=express-db
    volumes:
      - ./database/db_volume/:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # pgadmin:
  #   build:
  #     context: ./database
  #     dockerfile: pgadmin.dockerfile
  #   ports:
  #     - "5050:5050"

  fastapi-backend:
    build:
      context: ./fastapi-backend
      dockerfile: fastapi.dockerfile
    command: uvicorn app:app  --reload --host 0.0.0.0 --port 8000
    volumes:
      - ./fastapi-backend/:/app/
    ports:
      - 8000:8000

  flask-app:
    build:
      context: ./flask-app
      dockerfile: flask.dockerfile
    command: flask run --host=0.0.0.0 --port=5000
    volumes:
      - ./flask-app/:/app/
    ports:
      - 5000:5000

  express-api:
    build:
      context: ./express-api
      dockerfile: express.dockerfile
    command: npm start
    volumes:
      - ./express-api/:/app/
    ports:
      - 3000:3000

  jupyterlab:
    build:
      context: ./jupyter-lab
      dockerfile: jupyter.dockerfile
    ports:
      - "8888:8888"
    volumes:
      - ./data:/opt/app/data
    entrypoint: sh -c 'jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --notebook-dir=/opt/app/data --allow-root'

  traefik:
    build:
      context: ./traefik
      dockerfile: traefik.dockerfile
    volumes:
      - production_traefik:/etc/traefik/acme:z
      - ./traefik/logs:/logs
    ports:
      - "80:80"
      - "443:443"

volumes:
  production_traefik: {}
